name: NuGet
on:
  push:
    tags:
      - 'v*'
      
     
jobs:
  nuget-push:
    runs-on: ubuntu-latest
    
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
    
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
      
    - name: Read version from ref
      id: version
      shell: pwsh
      run: Write-Output "::set-output name=version::$($env:GITHUB_REF -replace '^refs/tags/v', '')"
      
    - name: NuGet cache
      uses: actions/cache@v2
      with:
       path: ${{ env.NUGET_PACKAGES }}
       key: release.nuget.${{ hashFiles('**/*.csproj') }}
      
    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
        
    - name: Prepare a NuGet package
      run: dotnet pack ./Fenrir/Fenrir.fsproj --configuration Release -p:Version=${{ steps.version.outputs.version }}

    - name: Read changelog
      id: changelog
      uses: mindsers/changelog-reader-action@v2
      with:
        version: ${{ steps.version.outputs.version }}
        
    - name: Create release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Fenrir v${{ steps.version.outputs.version }}
        body: ${{ steps.changelog.outputs.changes }}
        
    - name: Upload .nupkg file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_name: Fenrir.${{ steps.version.outputs.version }}.nupkg
        asset_path: ./Fenrir/bin/Release/Fenrir.Git.${{ steps.version.outputs.version }}.nupkg
        asset_content_type: application/zip
        
    - name: Upload .snupkg file
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_name: Fenrir.${{ steps.version.outputs.version }}.snupkg
          asset_path: ./Fenrir/bin/Release/Fenrir.Git.${{ steps.version.outputs.version }}.snupkg
          asset_content_type: application/zip
          
          
    - name: Prepare application archive to release
      run: dotnet publish ./Fenrir.Application/Fenrir.Application.fsproj -c Release -o ./publish
    - name: Archive publish folder
      run: zip -r publish.zip ./publish/*
      
    - name: Upload publish archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_name: Fenrir.Application.zip
        asset_path: ./publish.zip
        asset_content_type: application/zip
        
    
#    - name: Push a package to NuGet
#      run: dotnet nuget push ./Fenrir/bin/Release/Fenrir.${{ steps.version.outputs.version }}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }}   
